version: "3.7"

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    env_file:
      - ./backend/.env
    depends_on:
      - db
    networks:
      - app-network
    entrypoint: >
      sh -c "poetry run bash ./prestart.sh && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000"

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - ./frontend/.env
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - app-network

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    networks:
      - app-network

  proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: proxy-manager
    ports:
      - "81:81" # Management UI
      - "8090:8090" # HTTP port
      - "8443:8443" # HTTPS port
    volumes:
      - npm-data:/data
      - npm-letsencrypt:/etc/letsencrypt
    networks:
      - app-network

volumes:
  db-data:
  npm-data:
  npm-letsencrypt:

networks:
  app-network:
